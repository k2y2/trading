@model IEnumerable<trading.Models.TxnView>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {

    });
</script>

<h1>TX</h1>

<p>
    <a asp-action="CreateDeposit">Deposit</a> |
    <a asp-action="CreateLQuote">L-Quote</a> |
    <a asp-action="CreateQuote">Quote</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <table class="table-borderless">
                <tr>
                    <td>Client Trading Profile:</td>
                    <td>@Html.DropDownList("clientTradingProfileID", ViewBag.ClientTradingProfile as SelectList, "", new { @class = "form-control" })</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Provider Trading Profile:</td>
                    <td>@Html.DropDownList("providerTradingProfileID", ViewBag.ProviderTradingProfile as SelectList, "", new { @class = "form-control" })</td>
                    <td></td>
                </tr>
                <tr>
                    <td><input type="date" name="dateFilterStart" value="@ViewBag.dateFilterStart" /></td>
                    <td><input type="date" name="dateFilterEnd" value="@ViewBag.dateFilterEnd" /></td>
                    <td><input type="submit" value="Search" class="btn btn-default" /></td>
                </tr>
            </table>           
            @*<a asp-action="Index">Back to Full List</a>*@
        </p>
    </div>
</form> 
<table class="table table-striped table-bordered table-sticky" data-sticky-top="thead tr:first-child" data-sticky-left="tr td:first-child, tr th:first-child">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Alert)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LinkedDepositReferenceNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TradeDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientTradingProfileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientPriceRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientCurrencyPairName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientDfrRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientUniqueDfr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientExRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientCurrencyNameIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientAmountIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientCurrencyNameOut)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientAmountOut)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ClientPayOutAccountName)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ProviderTradingProfileName)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ProviderCurrencyName)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ProviderCostDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProviderCostRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProviderExpectedPayInAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProviderBankAccountName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReferenceNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTimeModified)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTimeAdded)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <a asp-action="Edit" asp-route-id="@item.id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.id">Delete</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Alert)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LinkedDepositReferenceNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TradeDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientTradingProfileName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientPriceRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientCurrencyPairName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientDfrRate)
            </td>
            <td>
                @(item.ClientUniqueDfr ? "Y" : "N")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientExRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientCurrencyNameIn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientAmountIn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientCurrencyNameOut)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientAmountOut)
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.ClientPayOutAccountName)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ProviderTradingProfileName)
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.ProviderCurrencyName)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ProviderCostDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProviderCostRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProviderExpectedPayInAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProviderBankAccountName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReferenceNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTimeModified)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTimeAdded)
            </td>

        </tr>
        }
    </tbody>
</table>